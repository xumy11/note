手写作业：
1.构造方法（书写形式，分类，特点，调用）
construct构造   构造方法  constructor
1.方法名与类名相同，2.没有返回值类型
书写形式：public 类名(){


	}
构造方法分为有参构造方法和无参构造方法。
有参构造方法主要用于为对象的属性直接赋值。

构造方法在new 对象时进行调用  实例化对象时
（Student stu = new Student();
Student()就在调用构造方法）两行不用写

特点：
每一个类 默认都存在一个没有方法体的无参构造方法。即public Student(){}
一旦，自己定义了构造方法(有参和无参都算)，默认的失效 。一旦定义了有参构造，无参构造没有。如果需要需要自己再定义。






2.方法重载
方法的重载：overload
三要素：
1.同一类中   
2.方法名相同   
3.参数不同(参数3要素至少有一个不同)
  参数数量，参数类型，参数顺序
方法的重载与方法的修饰符，返回值无关。
只有返回值不同的两个参数相同的方法不能叫重
载。

3.初始化代码块：
初始化块：
写法{  代码.....}
实例化初始化块：类被加载时调用。new 类使用类
块在构造方法之前调用。
使用：通常情况下，在实例化块中定义属性的默认值

静态初始化块：当类第一次被加载时调用，只执行一次
static{代码....}
静态初始化块中只能为静态属性赋值，不能为成员变量赋值


三、考试题：（5遍）
1.String StringBuffer StringBuilder的区别
2.写出数组的三种定义方式
3.== 和  .equals()区别
  ==对于基本数据类型 比较值
  引用数据类型  ==比较内存地址
  .equals()比较具体的值
4.简述对象和类之间的关系
  1.分析问题时先有对象后有类
  2.开发时先有类后有对象
  3.类是对象的抽象
  4.对象是类的具体（实例）
5.写出static修饰的属性和方法的特点
  static 修饰的属性是全局变量，可以通过类名直接调用。
  static修饰的方法是静态方法，与对象无关，直接通过类名调用。
  static修饰的代码块，在类第一次加载时调用且只调用一次。静态初始化块中只能修改静态变量，不能修改成员变量。


1.四个访问控制修饰符的权限   图
public  共有的
protected受保护的
default默认的 一般不写即为默认
private 私有的 

2.面向对象三大特征（学过的2个详细）
继承  封装  多态

封装：隐藏实现细节，提供共有方法,安全。
具体实现：将属性用private修饰(私有化),提供对应共有的set和get方法进行访问。

继承：子类继承父类的非私有的属性和方法
      可以实现代码的复用性，减少代码的冗余
      继承必须满足is-a的关系
      继承必须是单一继承
      继承具有传递性   动物-食草动物-羊类
      羊类同样具备动物的非私有属性和方法
      所有类 都有一个默认的父类，即继承的树根节点类，Object类。所有类默认继承Object类。

继承必须满足is-a的关系。飞机有飞的方法。鸟也有。

3.构造方法的继承关系：
构造方法是不能继承的。只能去调用
子类构造方法的第一行默认都会调用父类无参构造方法。当手动调用有参构造，默认失效。

一般情况下，要求子类在构造方法的第一行自动 调用父类的构造方法。super();


4.super和this的区别？
this表示当前类的对象  this.可以调用当前类的属性。this()可以调用当前类的其他构造方法。this()必须写在第一行。

super表示父类的对象。 super.可以调用父类的属性。super()可以调用父类的构造方法。super()必须写在第一行。




5.overload和override的区别
overload在昨天笔记中
override 当子类想改写父类的某个方法的具体实现（方法体），需要子类重写父类的方法，实现覆盖。
重写必须保证方法的定义完全相同（方法名，参数列表，返回值都必须相同）只有方法体不同。

当子类重写了父类的方法，子类调用将调用重写后的方法。



6.基本数据类型和引用数据类型值传递的区别？
基本数据类型和引用数据类型赋值，传参：
基本数据类型赋的是值，引用数据类型赋的是内存地址。






1.面向对象的三大特征：封装  继承  多态及详细

  封装  继承 见昨天
  多态：1.继承2.多态的体现在于方法的重写3.父类的 引用指向子类的实例


2.向上造型和向下造型：写一个例子

3.instanceof运算符：判断某个对象是否属于某个类（3遍）

4.抽象类和抽象方法的区别：
1.抽象类：当某个类不能进行实例化，将其定义为抽象类。一般情况下都是父类。
2.抽象方法：在父类规定一个方法，没有方法体，子类继承时要求必须将方法补充方法体实现。
3.有抽象方法的类必须是抽象类，但 抽象类中不一定有抽象方法。

5.final修饰的变量，方法，类有什么特点 ?
final修饰的变量是常量不能被改变(重新赋值)，final修饰的方法不能被重写，final修饰的类不能被继承。


6.
静态绑定和动态绑定的区别？
静态绑定发生在编译期，动态绑定发生在运行时。
静态绑定：被static,final,private修饰的属性和方法以及构造方法是静态绑定。
动态绑定：除了静态绑定都是动态绑定。









